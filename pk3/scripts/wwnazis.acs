#library "WWNAZIS"
#include "zcommon.acs"

Script "AutoReload"(void)
{
	SetResultValue(GetCVar("autoreload"));
}
Script "ShellLifetime"(void)
{
	SetResultValue(GetCVar("casinglifetime"));
}
Script "RecoilAmount"(void)
{
	SetResultValue(GetCVar("recoilamount"));
}
str taunts[18]=
{
	"allcaps/taunt","allcaps/reload","allcaps/grenadecall",
	"caleb/taunt","caleb/reload","caleb/grenadecall",
	"kingpin/taunt","kingpin/reload","kingpin/grenadecall",
	"soulman/taunt","soulman/reload","soulman/grenadecall",
	"spy/taunt","spy/reload","spy/grenadecall",
	"custom/taunt","custom/reload","custom/grenadecall"
};
str pain[24]=
{
	"allcapslowpain","allcapsmedpain","allcapshipain","allcapscritpain",
	"caleblowpain","calebmedpain","calebhipain","calebcritpain",
	"kingpinlowpain","kingpinmedpain","kingpinhipain","kingpincritpain",
	"soulmanlowpain","soulmanmedpain","soulmanhipain","soulmancritpain",
	"spylowpain","spymedpain","spyhipain","spycritpain",
	"weasellowpain","weaselmedpain","weaselhipain","weaselcritpain"
};
str scream[12]=
{
	"allcapsdeath","allcapscrazydeath",
	"calebdeath","calebcrazydeath",
	"kingpindeath","kingpincrazydeath",
	"soulmandeath","soulmancrazydeath",
	"spydeath","spycrazydeath",
	"weasledeath","weaselcrazydeath"
};
SCRIPT "WWNaziTaunt" (int tauntType)
{
	int pack=GetCVar("tauntpack");
	if(!pack)
		terminate;
	delay(20); // Appropriate wait time until player is done with the taunt-worthy action.
	//Print(i:tauntChance);
	if(tauntType==1&&random(1,5)==5)		// argument 1: taunt from firing
		PlaySound(0,taunts[0+((pack*3)-3)],CHAN_VOICE,1.0);
	else if(tauntType==2&&random(1,5)>=2)	// 2: taunt from reloading
		PlaySound(0,taunts[1+((pack*3)-3)],CHAN_VOICE,1.0);
	else if(tauntType==3&&random(1,5)>=2)	// 3: throwing a grenade
		PlaySound(0,taunts[2+((pack*3)-3)],CHAN_VOICE,1.0);
	Delay(5*35);
	//Log(s:"Taunt ready!");
}
script "PlayerPain" (void)
{
	int pack=GetCVar("tauntpack"),health=GetActorProperty(0,APROP_Health),level;
	if(!pack)
		pack=6;
	if(health<=25)
		level=3;
	else if(health<=50)
		level=2;
	else if(health<=75)
		level=1;
	PlaySound(0,pain[level+((pack*4)-4)],CHAN_VOICE,1.0);
}
script "PlayerScream" (void)
{
	int pack=GetCVar("tauntpack"),health=GetActorProperty(0,APROP_Health),level;
	if(!pack)
		pack=6;
	if(health<=(-50))
		level=1;
	PlaySound(0,scream[level+((pack*2)-2)],CHAN_VOICE,1.0);
}
str weapons[24]=
{
	"","Shovel","KnuckleDusters","Firebrand","Luger9mm","Walther9mm","WeaselsRevolver",
	"M1911","TrenchShotgun","Browning5","MP40","PPSH41","Sten",
	"Thompson","Kar98k","G43","Enfield","Garand",
	"STG44","FG42","Pyrolight","Nebelwerfer","Panzerschreck",
	"UMG43"
};
str weaponsfancy[24]=
{
	"","Shovel","Knuckle Dusters","Firebrand","Luger P08","Walther P38",".357 Revolver",
	"Colt M1911","M1897 Trenchgun","Browning Auto-5","MP 40","PPSh-41","Suppressed STEN Mk II",
	"Thompson M1A1","Karabiner 98k","Gewehr 43","Lee-Enfield SMLE","M1 Garand",
	"Sturmgewehr 44","FG 42","PyroLight","Klein Nebelwerfer","Panzerschreck",
	"UMG 43"
};
script "WWNaziStartingInventoryCheck" ENTER
{
	for(int i=4;i<=21;i++)
	{
		if(i!=20&&CheckInventory(weapons[i]))
			GiveInventory(StrParam(s:weapons[i],s:"StartCheck"),1);
	}
}
script "WWNaziCheatCheck" ENTER
{
	if(CheckInventory("ICheated"))
	{
		TakeInventory("ICheated",1);
		GiveInventory("IJustTraded",1);
		for(int i=1;i<=22;i++)
			DropItem(0,StrParam(s:weapons[i],s:"Pickup"));
		hudmessage(s:"Weapons! Take your pick!!";HUDMSG_PLAIN,887,CR_GOLD,0.5,0.3,2.0);
	}
	Delay(1);
	restart;
}
script "WWNaziWeaponCollect"(int weapon)
{
	SetActivator(0,AAPTR_TARGET);
	int load,i,currentweapon,min,max;
	if(weapon>=1&&weapon<=3)//Melee
	{
		min=1;
		max=3;
	}
	else if(weapon>=4&&weapon<=7)//Pistol
	{
		min=4;
		max=7;
	}
	else if(weapon>=8&&weapon<=13)//Shotgun/SMG
	{
		min=8;
		max=13;
	}
	else if(weapon>=14&&weapon<=19)//Rifle/Machinegun
	{
		min=14;
		max=19;
	}
	else if(weapon>=20)//Heavy
	{
		min=20;
		max=23;
	}
	for(i=min;i<=max;i++)
	{
		if(CheckInventory(weapons[i]))
			currentweapon=i;
	}
	if(currentweapon)	//You have a weapon for this slot
	{
		if(CheckInventory("IJustTraded")||currentweapon==weapon)
			SetResultValue(0);
		else
		{
			hudmessage(s:"Tap <",k:"+zoom",s:"> to trade the ",s:weaponsfancy[currentweapon],s:" for the ",s:weaponsfancy[weapon],s:".";HUDMSG_PLAIN,887,CR_GOLD,0.5,0.3,2.0);
			int buttons = GetPlayerInput(-1,INPUT_BUTTONS);
			if(buttons & BT_ZOOM)
			{
				GiveInventory("IJustTraded",1);
				giveweapon(weapon);
				ACS_NamedExecuteAlways("WWNaziWeaponDrop",0,currentweapon,weapon);
				if(weapon==3)
					PlaySound(0,"sword/draw",CHAN_ITEM);
				else if(weapon==23)
					PlaySound(0,"chaingun/get",CHAN_ITEM);
				else
					PlaySound(0,"misc/w_pkup",CHAN_ITEM);
				hudmessage(s:"Traded the ",s:weaponsfancy[currentweapon],s:" for the ",s:weaponsfancy[weapon],s:"!";HUDMSG_PLAIN,887,CR_GOLD,0.5,0.3,2.0);
				SetResultValue(1);
			}
			else
				SetResultValue(0);
		}
	}
	else
	{
		giveweapon(weapon);
		if(weapon==3)
			PlaySound(0,"sword/draw",CHAN_ITEM);
		else if(weapon==23)
			PlaySound(0,"chaingun/get",CHAN_ITEM);
		else
			PlaySound(0,"misc/w_pkup",CHAN_ITEM);
		hudmessage(s:"Picked up the ",s:weaponsfancy[weapon],s:"!";HUDMSG_PLAIN,887,CR_GOLD,0.5,0.3,2.0);
		SetResultValue(1);
	}
}
script "WWNaziWeaponDrop"(int currentweapon,int weapon)
{
	int changing=SetWeapon(weapons[weapon]);
	while(changing&&!StrCmp(GetWeapon(),weapons[currentweapon]))
		delay(1);
	TakeInventory(weapons[currentweapon],1);
	DropItem(0,StrParam(s:weapons[currentweapon],s:"Pickup"));
}

function void giveweapon(int weapon)
{
	GiveInventory(weapons[weapon],1);
	if(weapon>=4&&weapon!=21&&weapon!=23)
	{
		if(!CheckInventory(StrParam(s:weapons[weapon],s:"StartCheck")))
		{
			GiveInventory(StrParam(s:weapons[weapon],s:"StartCheck"),1);
			GiveInventory(StrParam(s:weapons[weapon],s:"Loaded"),999);
		}
	}
	if(!GetCVAR("neverswitchonpickup"))
		SetWeapon(weapons[weapon]);
}
